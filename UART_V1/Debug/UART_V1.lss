
UART_V1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000764  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000009cc  00000000  00000000  000007b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000083b  00000000  00000000  00001184  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 91 03 	call	0x722	; 0x722 <main>
  64:	0c 94 b0 03 	jmp	0x760	; 0x760 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_vidSetPinDirection>:

/*Desc: ....... */
/*inputs : */
/*output : */
void DIO_vidSetPinDirection(u8 Copy_u8PortId,u8 Copy_u8PinId,u8 Copy_u8Direction)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	27 97       	sbiw	r28, 0x07	; 7
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	89 83       	std	Y+1, r24	; 0x01
  82:	6a 83       	std	Y+2, r22	; 0x02
  84:	4b 83       	std	Y+3, r20	; 0x03
	if( (Copy_u8PortId <= PORTD) && (Copy_u8PinId <= PIN7) )
  86:	89 81       	ldd	r24, Y+1	; 0x01
  88:	84 30       	cpi	r24, 0x04	; 4
  8a:	08 f0       	brcs	.+2      	; 0x8e <DIO_vidSetPinDirection+0x22>
  8c:	ee c0       	rjmp	.+476    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
  8e:	8a 81       	ldd	r24, Y+2	; 0x02
  90:	88 30       	cpi	r24, 0x08	; 8
  92:	08 f0       	brcs	.+2      	; 0x96 <DIO_vidSetPinDirection+0x2a>
  94:	ea c0       	rjmp	.+468    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
	{
		/*parameter checked status ok*/
		if(Copy_u8Direction == DIO_OUTPUT)
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	81 30       	cpi	r24, 0x01	; 1
  9a:	09 f0       	breq	.+2      	; 0x9e <DIO_vidSetPinDirection+0x32>
  9c:	6f c0       	rjmp	.+222    	; 0x17c <DIO_vidSetPinDirection+0x110>
		{
			switch (Copy_u8PortId)
  9e:	89 81       	ldd	r24, Y+1	; 0x01
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3f 83       	std	Y+7, r19	; 0x07
  a6:	2e 83       	std	Y+6, r18	; 0x06
  a8:	8e 81       	ldd	r24, Y+6	; 0x06
  aa:	9f 81       	ldd	r25, Y+7	; 0x07
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	91 05       	cpc	r25, r1
  b0:	49 f1       	breq	.+82     	; 0x104 <DIO_vidSetPinDirection+0x98>
  b2:	2e 81       	ldd	r18, Y+6	; 0x06
  b4:	3f 81       	ldd	r19, Y+7	; 0x07
  b6:	22 30       	cpi	r18, 0x02	; 2
  b8:	31 05       	cpc	r19, r1
  ba:	2c f4       	brge	.+10     	; 0xc6 <DIO_vidSetPinDirection+0x5a>
  bc:	8e 81       	ldd	r24, Y+6	; 0x06
  be:	9f 81       	ldd	r25, Y+7	; 0x07
  c0:	00 97       	sbiw	r24, 0x00	; 0
  c2:	61 f0       	breq	.+24     	; 0xdc <DIO_vidSetPinDirection+0x70>
  c4:	d2 c0       	rjmp	.+420    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
  c6:	2e 81       	ldd	r18, Y+6	; 0x06
  c8:	3f 81       	ldd	r19, Y+7	; 0x07
  ca:	22 30       	cpi	r18, 0x02	; 2
  cc:	31 05       	cpc	r19, r1
  ce:	71 f1       	breq	.+92     	; 0x12c <DIO_vidSetPinDirection+0xc0>
  d0:	8e 81       	ldd	r24, Y+6	; 0x06
  d2:	9f 81       	ldd	r25, Y+7	; 0x07
  d4:	83 30       	cpi	r24, 0x03	; 3
  d6:	91 05       	cpc	r25, r1
  d8:	e9 f1       	breq	.+122    	; 0x154 <DIO_vidSetPinDirection+0xe8>
  da:	c7 c0       	rjmp	.+398    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
			{
				case PORTA: SET_BIT(DDRA_Register,Copy_u8PinId); break;
  dc:	aa e3       	ldi	r26, 0x3A	; 58
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	ea e3       	ldi	r30, 0x3A	; 58
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	48 2f       	mov	r20, r24
  e8:	8a 81       	ldd	r24, Y+2	; 0x02
  ea:	28 2f       	mov	r18, r24
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 2e       	mov	r0, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_vidSetPinDirection+0x8e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_vidSetPinDirection+0x8a>
  fe:	84 2b       	or	r24, r20
 100:	8c 93       	st	X, r24
 102:	b3 c0       	rjmp	.+358    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
				case PORTB: SET_BIT(DDRB_Register,Copy_u8PinId); break;
 104:	a7 e3       	ldi	r26, 0x37	; 55
 106:	b0 e0       	ldi	r27, 0x00	; 0
 108:	e7 e3       	ldi	r30, 0x37	; 55
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	48 2f       	mov	r20, r24
 110:	8a 81       	ldd	r24, Y+2	; 0x02
 112:	28 2f       	mov	r18, r24
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 2e       	mov	r0, r18
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_vidSetPinDirection+0xb6>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	0a 94       	dec	r0
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_vidSetPinDirection+0xb2>
 126:	84 2b       	or	r24, r20
 128:	8c 93       	st	X, r24
 12a:	9f c0       	rjmp	.+318    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
				case PORTC: SET_BIT(DDRC_Register,Copy_u8PinId); break;
 12c:	a4 e3       	ldi	r26, 0x34	; 52
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	e4 e3       	ldi	r30, 0x34	; 52
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8a 81       	ldd	r24, Y+2	; 0x02
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_vidSetPinDirection+0xde>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_vidSetPinDirection+0xda>
 14e:	84 2b       	or	r24, r20
 150:	8c 93       	st	X, r24
 152:	8b c0       	rjmp	.+278    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
				case PORTD: SET_BIT(DDRD_Register,Copy_u8PinId); break;
 154:	a1 e3       	ldi	r26, 0x31	; 49
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	e1 e3       	ldi	r30, 0x31	; 49
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 2e       	mov	r0, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_vidSetPinDirection+0x106>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_vidSetPinDirection+0x102>
 176:	84 2b       	or	r24, r20
 178:	8c 93       	st	X, r24
 17a:	77 c0       	rjmp	.+238    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
			}
		}
		else if (Copy_u8Direction == DIO_INPUT)
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	88 23       	and	r24, r24
 180:	09 f0       	breq	.+2      	; 0x184 <DIO_vidSetPinDirection+0x118>
 182:	73 c0       	rjmp	.+230    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
		{
			switch (Copy_u8PortId)
 184:	89 81       	ldd	r24, Y+1	; 0x01
 186:	28 2f       	mov	r18, r24
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	3d 83       	std	Y+5, r19	; 0x05
 18c:	2c 83       	std	Y+4, r18	; 0x04
 18e:	8c 81       	ldd	r24, Y+4	; 0x04
 190:	9d 81       	ldd	r25, Y+5	; 0x05
 192:	81 30       	cpi	r24, 0x01	; 1
 194:	91 05       	cpc	r25, r1
 196:	59 f1       	breq	.+86     	; 0x1ee <DIO_vidSetPinDirection+0x182>
 198:	2c 81       	ldd	r18, Y+4	; 0x04
 19a:	3d 81       	ldd	r19, Y+5	; 0x05
 19c:	22 30       	cpi	r18, 0x02	; 2
 19e:	31 05       	cpc	r19, r1
 1a0:	2c f4       	brge	.+10     	; 0x1ac <DIO_vidSetPinDirection+0x140>
 1a2:	8c 81       	ldd	r24, Y+4	; 0x04
 1a4:	9d 81       	ldd	r25, Y+5	; 0x05
 1a6:	00 97       	sbiw	r24, 0x00	; 0
 1a8:	69 f0       	breq	.+26     	; 0x1c4 <DIO_vidSetPinDirection+0x158>
 1aa:	5f c0       	rjmp	.+190    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
 1ac:	2c 81       	ldd	r18, Y+4	; 0x04
 1ae:	3d 81       	ldd	r19, Y+5	; 0x05
 1b0:	22 30       	cpi	r18, 0x02	; 2
 1b2:	31 05       	cpc	r19, r1
 1b4:	89 f1       	breq	.+98     	; 0x218 <DIO_vidSetPinDirection+0x1ac>
 1b6:	8c 81       	ldd	r24, Y+4	; 0x04
 1b8:	9d 81       	ldd	r25, Y+5	; 0x05
 1ba:	83 30       	cpi	r24, 0x03	; 3
 1bc:	91 05       	cpc	r25, r1
 1be:	09 f4       	brne	.+2      	; 0x1c2 <DIO_vidSetPinDirection+0x156>
 1c0:	40 c0       	rjmp	.+128    	; 0x242 <DIO_vidSetPinDirection+0x1d6>
 1c2:	53 c0       	rjmp	.+166    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
			{
				case PORTA: CLR_BIT(DDRA_Register,Copy_u8PinId); break;
 1c4:	aa e3       	ldi	r26, 0x3A	; 58
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	ea e3       	ldi	r30, 0x3A	; 58
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	48 2f       	mov	r20, r24
 1d0:	8a 81       	ldd	r24, Y+2	; 0x02
 1d2:	28 2f       	mov	r18, r24
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 2e       	mov	r0, r18
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_vidSetPinDirection+0x176>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	0a 94       	dec	r0
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_vidSetPinDirection+0x172>
 1e6:	80 95       	com	r24
 1e8:	84 23       	and	r24, r20
 1ea:	8c 93       	st	X, r24
 1ec:	3e c0       	rjmp	.+124    	; 0x26a <DIO_vidSetPinDirection+0x1fe>
				case PORTB: CLR_BIT(DDRB_Register,Copy_u8PinId); break;
 1ee:	a7 e3       	ldi	r26, 0x37	; 55
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	e7 e3       	ldi	r30, 0x37	; 55
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8a 81       	ldd	r24, Y+2	; 0x02
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_vidSetPinDirection+0x1a0>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_vidSetPinDirection+0x19c>
 210:	80 95       	com	r24
 212:	84 23       	and	r24, r20
 214:	8c 93       	st	X, r24
 216:	29 c0       	rjmp	.+82     	; 0x26a <DIO_vidSetPinDirection+0x1fe>
				case PORTC: CLR_BIT(DDRC_Register,Copy_u8PinId); break;
 218:	a4 e3       	ldi	r26, 0x34	; 52
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e4 e3       	ldi	r30, 0x34	; 52
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	8a 81       	ldd	r24, Y+2	; 0x02
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_vidSetPinDirection+0x1ca>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_vidSetPinDirection+0x1c6>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
 240:	14 c0       	rjmp	.+40     	; 0x26a <DIO_vidSetPinDirection+0x1fe>
				case PORTD: CLR_BIT(DDRD_Register,Copy_u8PinId); break;
 242:	a1 e3       	ldi	r26, 0x31	; 49
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e1 e3       	ldi	r30, 0x31	; 49
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	48 2f       	mov	r20, r24
 24e:	8a 81       	ldd	r24, Y+2	; 0x02
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 2e       	mov	r0, r18
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_vidSetPinDirection+0x1f4>
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	0a 94       	dec	r0
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_vidSetPinDirection+0x1f0>
 264:	80 95       	com	r24
 266:	84 23       	and	r24, r20
 268:	8c 93       	st	X, r24
	}
	else
	{
		/*error ....*/
	}
}
 26a:	27 96       	adiw	r28, 0x07	; 7
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
 276:	cf 91       	pop	r28
 278:	df 91       	pop	r29
 27a:	08 95       	ret

0000027c <DIO_vidSetPinValue>:


void DIO_vidSetPinValue(u8 Copy_u8PortId,u8 Copy_u8PinId,u8 Copy_u8Value)
{
 27c:	df 93       	push	r29
 27e:	cf 93       	push	r28
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	27 97       	sbiw	r28, 0x07	; 7
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	6a 83       	std	Y+2, r22	; 0x02
 294:	4b 83       	std	Y+3, r20	; 0x03
	if( (Copy_u8PortId <= PORTD) && (Copy_u8PinId <= PIN7) )
 296:	89 81       	ldd	r24, Y+1	; 0x01
 298:	84 30       	cpi	r24, 0x04	; 4
 29a:	08 f0       	brcs	.+2      	; 0x29e <DIO_vidSetPinValue+0x22>
 29c:	ee c0       	rjmp	.+476    	; 0x47a <DIO_vidSetPinValue+0x1fe>
 29e:	8a 81       	ldd	r24, Y+2	; 0x02
 2a0:	88 30       	cpi	r24, 0x08	; 8
 2a2:	08 f0       	brcs	.+2      	; 0x2a6 <DIO_vidSetPinValue+0x2a>
 2a4:	ea c0       	rjmp	.+468    	; 0x47a <DIO_vidSetPinValue+0x1fe>
	{
		if(Copy_u8Value == DIO_HIGH)
 2a6:	8b 81       	ldd	r24, Y+3	; 0x03
 2a8:	81 30       	cpi	r24, 0x01	; 1
 2aa:	09 f0       	breq	.+2      	; 0x2ae <DIO_vidSetPinValue+0x32>
 2ac:	6f c0       	rjmp	.+222    	; 0x38c <DIO_vidSetPinValue+0x110>
		{
			switch (Copy_u8PortId)
 2ae:	89 81       	ldd	r24, Y+1	; 0x01
 2b0:	28 2f       	mov	r18, r24
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	3f 83       	std	Y+7, r19	; 0x07
 2b6:	2e 83       	std	Y+6, r18	; 0x06
 2b8:	8e 81       	ldd	r24, Y+6	; 0x06
 2ba:	9f 81       	ldd	r25, Y+7	; 0x07
 2bc:	81 30       	cpi	r24, 0x01	; 1
 2be:	91 05       	cpc	r25, r1
 2c0:	49 f1       	breq	.+82     	; 0x314 <DIO_vidSetPinValue+0x98>
 2c2:	2e 81       	ldd	r18, Y+6	; 0x06
 2c4:	3f 81       	ldd	r19, Y+7	; 0x07
 2c6:	22 30       	cpi	r18, 0x02	; 2
 2c8:	31 05       	cpc	r19, r1
 2ca:	2c f4       	brge	.+10     	; 0x2d6 <DIO_vidSetPinValue+0x5a>
 2cc:	8e 81       	ldd	r24, Y+6	; 0x06
 2ce:	9f 81       	ldd	r25, Y+7	; 0x07
 2d0:	00 97       	sbiw	r24, 0x00	; 0
 2d2:	61 f0       	breq	.+24     	; 0x2ec <DIO_vidSetPinValue+0x70>
 2d4:	d2 c0       	rjmp	.+420    	; 0x47a <DIO_vidSetPinValue+0x1fe>
 2d6:	2e 81       	ldd	r18, Y+6	; 0x06
 2d8:	3f 81       	ldd	r19, Y+7	; 0x07
 2da:	22 30       	cpi	r18, 0x02	; 2
 2dc:	31 05       	cpc	r19, r1
 2de:	71 f1       	breq	.+92     	; 0x33c <DIO_vidSetPinValue+0xc0>
 2e0:	8e 81       	ldd	r24, Y+6	; 0x06
 2e2:	9f 81       	ldd	r25, Y+7	; 0x07
 2e4:	83 30       	cpi	r24, 0x03	; 3
 2e6:	91 05       	cpc	r25, r1
 2e8:	e9 f1       	breq	.+122    	; 0x364 <DIO_vidSetPinValue+0xe8>
 2ea:	c7 c0       	rjmp	.+398    	; 0x47a <DIO_vidSetPinValue+0x1fe>
			{
				case PORTA: SET_BIT(PORTA_Register,Copy_u8PinId); break;
 2ec:	ab e3       	ldi	r26, 0x3B	; 59
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	eb e3       	ldi	r30, 0x3B	; 59
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	48 2f       	mov	r20, r24
 2f8:	8a 81       	ldd	r24, Y+2	; 0x02
 2fa:	28 2f       	mov	r18, r24
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	02 2e       	mov	r0, r18
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_vidSetPinValue+0x8e>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	0a 94       	dec	r0
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_vidSetPinValue+0x8a>
 30e:	84 2b       	or	r24, r20
 310:	8c 93       	st	X, r24
 312:	b3 c0       	rjmp	.+358    	; 0x47a <DIO_vidSetPinValue+0x1fe>
				case PORTB: SET_BIT(PORTB_Register,Copy_u8PinId); break;
 314:	a8 e3       	ldi	r26, 0x38	; 56
 316:	b0 e0       	ldi	r27, 0x00	; 0
 318:	e8 e3       	ldi	r30, 0x38	; 56
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	48 2f       	mov	r20, r24
 320:	8a 81       	ldd	r24, Y+2	; 0x02
 322:	28 2f       	mov	r18, r24
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 2e       	mov	r0, r18
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_vidSetPinValue+0xb6>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	0a 94       	dec	r0
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_vidSetPinValue+0xb2>
 336:	84 2b       	or	r24, r20
 338:	8c 93       	st	X, r24
 33a:	9f c0       	rjmp	.+318    	; 0x47a <DIO_vidSetPinValue+0x1fe>
				case PORTC: SET_BIT(PORTC_Register,Copy_u8PinId); break;
 33c:	a5 e3       	ldi	r26, 0x35	; 53
 33e:	b0 e0       	ldi	r27, 0x00	; 0
 340:	e5 e3       	ldi	r30, 0x35	; 53
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	48 2f       	mov	r20, r24
 348:	8a 81       	ldd	r24, Y+2	; 0x02
 34a:	28 2f       	mov	r18, r24
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	02 2e       	mov	r0, r18
 354:	02 c0       	rjmp	.+4      	; 0x35a <DIO_vidSetPinValue+0xde>
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	0a 94       	dec	r0
 35c:	e2 f7       	brpl	.-8      	; 0x356 <DIO_vidSetPinValue+0xda>
 35e:	84 2b       	or	r24, r20
 360:	8c 93       	st	X, r24
 362:	8b c0       	rjmp	.+278    	; 0x47a <DIO_vidSetPinValue+0x1fe>
				case PORTD: SET_BIT(PORTD_Register,Copy_u8PinId); break;
 364:	a2 e3       	ldi	r26, 0x32	; 50
 366:	b0 e0       	ldi	r27, 0x00	; 0
 368:	e2 e3       	ldi	r30, 0x32	; 50
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	80 81       	ld	r24, Z
 36e:	48 2f       	mov	r20, r24
 370:	8a 81       	ldd	r24, Y+2	; 0x02
 372:	28 2f       	mov	r18, r24
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	02 2e       	mov	r0, r18
 37c:	02 c0       	rjmp	.+4      	; 0x382 <DIO_vidSetPinValue+0x106>
 37e:	88 0f       	add	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	0a 94       	dec	r0
 384:	e2 f7       	brpl	.-8      	; 0x37e <DIO_vidSetPinValue+0x102>
 386:	84 2b       	or	r24, r20
 388:	8c 93       	st	X, r24
 38a:	77 c0       	rjmp	.+238    	; 0x47a <DIO_vidSetPinValue+0x1fe>
			}
		}
		else if (Copy_u8Value == DIO_LOW)
 38c:	8b 81       	ldd	r24, Y+3	; 0x03
 38e:	88 23       	and	r24, r24
 390:	09 f0       	breq	.+2      	; 0x394 <DIO_vidSetPinValue+0x118>
 392:	73 c0       	rjmp	.+230    	; 0x47a <DIO_vidSetPinValue+0x1fe>
		{
			switch (Copy_u8PortId)
 394:	89 81       	ldd	r24, Y+1	; 0x01
 396:	28 2f       	mov	r18, r24
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	3d 83       	std	Y+5, r19	; 0x05
 39c:	2c 83       	std	Y+4, r18	; 0x04
 39e:	8c 81       	ldd	r24, Y+4	; 0x04
 3a0:	9d 81       	ldd	r25, Y+5	; 0x05
 3a2:	81 30       	cpi	r24, 0x01	; 1
 3a4:	91 05       	cpc	r25, r1
 3a6:	59 f1       	breq	.+86     	; 0x3fe <DIO_vidSetPinValue+0x182>
 3a8:	2c 81       	ldd	r18, Y+4	; 0x04
 3aa:	3d 81       	ldd	r19, Y+5	; 0x05
 3ac:	22 30       	cpi	r18, 0x02	; 2
 3ae:	31 05       	cpc	r19, r1
 3b0:	2c f4       	brge	.+10     	; 0x3bc <DIO_vidSetPinValue+0x140>
 3b2:	8c 81       	ldd	r24, Y+4	; 0x04
 3b4:	9d 81       	ldd	r25, Y+5	; 0x05
 3b6:	00 97       	sbiw	r24, 0x00	; 0
 3b8:	69 f0       	breq	.+26     	; 0x3d4 <DIO_vidSetPinValue+0x158>
 3ba:	5f c0       	rjmp	.+190    	; 0x47a <DIO_vidSetPinValue+0x1fe>
 3bc:	2c 81       	ldd	r18, Y+4	; 0x04
 3be:	3d 81       	ldd	r19, Y+5	; 0x05
 3c0:	22 30       	cpi	r18, 0x02	; 2
 3c2:	31 05       	cpc	r19, r1
 3c4:	89 f1       	breq	.+98     	; 0x428 <DIO_vidSetPinValue+0x1ac>
 3c6:	8c 81       	ldd	r24, Y+4	; 0x04
 3c8:	9d 81       	ldd	r25, Y+5	; 0x05
 3ca:	83 30       	cpi	r24, 0x03	; 3
 3cc:	91 05       	cpc	r25, r1
 3ce:	09 f4       	brne	.+2      	; 0x3d2 <DIO_vidSetPinValue+0x156>
 3d0:	40 c0       	rjmp	.+128    	; 0x452 <DIO_vidSetPinValue+0x1d6>
 3d2:	53 c0       	rjmp	.+166    	; 0x47a <DIO_vidSetPinValue+0x1fe>
			{
				case PORTA: CLR_BIT(PORTA_Register,Copy_u8PinId); break;
 3d4:	ab e3       	ldi	r26, 0x3B	; 59
 3d6:	b0 e0       	ldi	r27, 0x00	; 0
 3d8:	eb e3       	ldi	r30, 0x3B	; 59
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	80 81       	ld	r24, Z
 3de:	48 2f       	mov	r20, r24
 3e0:	8a 81       	ldd	r24, Y+2	; 0x02
 3e2:	28 2f       	mov	r18, r24
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	02 2e       	mov	r0, r18
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_vidSetPinValue+0x176>
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	0a 94       	dec	r0
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_vidSetPinValue+0x172>
 3f6:	80 95       	com	r24
 3f8:	84 23       	and	r24, r20
 3fa:	8c 93       	st	X, r24
 3fc:	3e c0       	rjmp	.+124    	; 0x47a <DIO_vidSetPinValue+0x1fe>
				case PORTB: CLR_BIT(PORTB_Register,Copy_u8PinId); break;
 3fe:	a8 e3       	ldi	r26, 0x38	; 56
 400:	b0 e0       	ldi	r27, 0x00	; 0
 402:	e8 e3       	ldi	r30, 0x38	; 56
 404:	f0 e0       	ldi	r31, 0x00	; 0
 406:	80 81       	ld	r24, Z
 408:	48 2f       	mov	r20, r24
 40a:	8a 81       	ldd	r24, Y+2	; 0x02
 40c:	28 2f       	mov	r18, r24
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 2e       	mov	r0, r18
 416:	02 c0       	rjmp	.+4      	; 0x41c <DIO_vidSetPinValue+0x1a0>
 418:	88 0f       	add	r24, r24
 41a:	99 1f       	adc	r25, r25
 41c:	0a 94       	dec	r0
 41e:	e2 f7       	brpl	.-8      	; 0x418 <DIO_vidSetPinValue+0x19c>
 420:	80 95       	com	r24
 422:	84 23       	and	r24, r20
 424:	8c 93       	st	X, r24
 426:	29 c0       	rjmp	.+82     	; 0x47a <DIO_vidSetPinValue+0x1fe>
				case PORTC: CLR_BIT(PORTC_Register,Copy_u8PinId); break;
 428:	a5 e3       	ldi	r26, 0x35	; 53
 42a:	b0 e0       	ldi	r27, 0x00	; 0
 42c:	e5 e3       	ldi	r30, 0x35	; 53
 42e:	f0 e0       	ldi	r31, 0x00	; 0
 430:	80 81       	ld	r24, Z
 432:	48 2f       	mov	r20, r24
 434:	8a 81       	ldd	r24, Y+2	; 0x02
 436:	28 2f       	mov	r18, r24
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	02 2e       	mov	r0, r18
 440:	02 c0       	rjmp	.+4      	; 0x446 <DIO_vidSetPinValue+0x1ca>
 442:	88 0f       	add	r24, r24
 444:	99 1f       	adc	r25, r25
 446:	0a 94       	dec	r0
 448:	e2 f7       	brpl	.-8      	; 0x442 <DIO_vidSetPinValue+0x1c6>
 44a:	80 95       	com	r24
 44c:	84 23       	and	r24, r20
 44e:	8c 93       	st	X, r24
 450:	14 c0       	rjmp	.+40     	; 0x47a <DIO_vidSetPinValue+0x1fe>
				case PORTD: CLR_BIT(PORTD_Register,Copy_u8PinId); break;
 452:	a2 e3       	ldi	r26, 0x32	; 50
 454:	b0 e0       	ldi	r27, 0x00	; 0
 456:	e2 e3       	ldi	r30, 0x32	; 50
 458:	f0 e0       	ldi	r31, 0x00	; 0
 45a:	80 81       	ld	r24, Z
 45c:	48 2f       	mov	r20, r24
 45e:	8a 81       	ldd	r24, Y+2	; 0x02
 460:	28 2f       	mov	r18, r24
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	02 2e       	mov	r0, r18
 46a:	02 c0       	rjmp	.+4      	; 0x470 <DIO_vidSetPinValue+0x1f4>
 46c:	88 0f       	add	r24, r24
 46e:	99 1f       	adc	r25, r25
 470:	0a 94       	dec	r0
 472:	e2 f7       	brpl	.-8      	; 0x46c <DIO_vidSetPinValue+0x1f0>
 474:	80 95       	com	r24
 476:	84 23       	and	r24, r20
 478:	8c 93       	st	X, r24
	}
	else
	{
		//error
	}
}
 47a:	27 96       	adiw	r28, 0x07	; 7
 47c:	0f b6       	in	r0, 0x3f	; 63
 47e:	f8 94       	cli
 480:	de bf       	out	0x3e, r29	; 62
 482:	0f be       	out	0x3f, r0	; 63
 484:	cd bf       	out	0x3d, r28	; 61
 486:	cf 91       	pop	r28
 488:	df 91       	pop	r29
 48a:	08 95       	ret

0000048c <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8PortId,u8 Copy_u8PinId)
{
 48c:	df 93       	push	r29
 48e:	cf 93       	push	r28
 490:	00 d0       	rcall	.+0      	; 0x492 <DIO_u8GetPinValue+0x6>
 492:	00 d0       	rcall	.+0      	; 0x494 <DIO_u8GetPinValue+0x8>
 494:	0f 92       	push	r0
 496:	cd b7       	in	r28, 0x3d	; 61
 498:	de b7       	in	r29, 0x3e	; 62
 49a:	8a 83       	std	Y+2, r24	; 0x02
 49c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Result;
	if( (Copy_u8PortId <= PORTD) && (Copy_u8PinId <= PIN7) )
 49e:	8a 81       	ldd	r24, Y+2	; 0x02
 4a0:	84 30       	cpi	r24, 0x04	; 4
 4a2:	08 f0       	brcs	.+2      	; 0x4a6 <DIO_u8GetPinValue+0x1a>
 4a4:	6c c0       	rjmp	.+216    	; 0x57e <DIO_u8GetPinValue+0xf2>
 4a6:	8b 81       	ldd	r24, Y+3	; 0x03
 4a8:	88 30       	cpi	r24, 0x08	; 8
 4aa:	08 f0       	brcs	.+2      	; 0x4ae <DIO_u8GetPinValue+0x22>
 4ac:	68 c0       	rjmp	.+208    	; 0x57e <DIO_u8GetPinValue+0xf2>
	{
		switch (Copy_u8PortId)
 4ae:	8a 81       	ldd	r24, Y+2	; 0x02
 4b0:	28 2f       	mov	r18, r24
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	3d 83       	std	Y+5, r19	; 0x05
 4b6:	2c 83       	std	Y+4, r18	; 0x04
 4b8:	4c 81       	ldd	r20, Y+4	; 0x04
 4ba:	5d 81       	ldd	r21, Y+5	; 0x05
 4bc:	41 30       	cpi	r20, 0x01	; 1
 4be:	51 05       	cpc	r21, r1
 4c0:	41 f1       	breq	.+80     	; 0x512 <DIO_u8GetPinValue+0x86>
 4c2:	8c 81       	ldd	r24, Y+4	; 0x04
 4c4:	9d 81       	ldd	r25, Y+5	; 0x05
 4c6:	82 30       	cpi	r24, 0x02	; 2
 4c8:	91 05       	cpc	r25, r1
 4ca:	34 f4       	brge	.+12     	; 0x4d8 <DIO_u8GetPinValue+0x4c>
 4cc:	2c 81       	ldd	r18, Y+4	; 0x04
 4ce:	3d 81       	ldd	r19, Y+5	; 0x05
 4d0:	21 15       	cp	r18, r1
 4d2:	31 05       	cpc	r19, r1
 4d4:	61 f0       	breq	.+24     	; 0x4ee <DIO_u8GetPinValue+0x62>
 4d6:	55 c0       	rjmp	.+170    	; 0x582 <DIO_u8GetPinValue+0xf6>
 4d8:	4c 81       	ldd	r20, Y+4	; 0x04
 4da:	5d 81       	ldd	r21, Y+5	; 0x05
 4dc:	42 30       	cpi	r20, 0x02	; 2
 4de:	51 05       	cpc	r21, r1
 4e0:	51 f1       	breq	.+84     	; 0x536 <DIO_u8GetPinValue+0xaa>
 4e2:	8c 81       	ldd	r24, Y+4	; 0x04
 4e4:	9d 81       	ldd	r25, Y+5	; 0x05
 4e6:	83 30       	cpi	r24, 0x03	; 3
 4e8:	91 05       	cpc	r25, r1
 4ea:	b9 f1       	breq	.+110    	; 0x55a <DIO_u8GetPinValue+0xce>
 4ec:	4a c0       	rjmp	.+148    	; 0x582 <DIO_u8GetPinValue+0xf6>
		{
			case PORTA: Local_u8Result=GET_BIT(PINA_Register,Copy_u8PinId); break;
 4ee:	e9 e3       	ldi	r30, 0x39	; 57
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	80 81       	ld	r24, Z
 4f4:	28 2f       	mov	r18, r24
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	8b 81       	ldd	r24, Y+3	; 0x03
 4fa:	88 2f       	mov	r24, r24
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	a9 01       	movw	r20, r18
 500:	02 c0       	rjmp	.+4      	; 0x506 <DIO_u8GetPinValue+0x7a>
 502:	55 95       	asr	r21
 504:	47 95       	ror	r20
 506:	8a 95       	dec	r24
 508:	e2 f7       	brpl	.-8      	; 0x502 <DIO_u8GetPinValue+0x76>
 50a:	ca 01       	movw	r24, r20
 50c:	81 70       	andi	r24, 0x01	; 1
 50e:	89 83       	std	Y+1, r24	; 0x01
 510:	38 c0       	rjmp	.+112    	; 0x582 <DIO_u8GetPinValue+0xf6>
			case PORTB: Local_u8Result=GET_BIT(PINB_Register,Copy_u8PinId); break;
 512:	e6 e3       	ldi	r30, 0x36	; 54
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	80 81       	ld	r24, Z
 518:	28 2f       	mov	r18, r24
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	8b 81       	ldd	r24, Y+3	; 0x03
 51e:	88 2f       	mov	r24, r24
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	a9 01       	movw	r20, r18
 524:	02 c0       	rjmp	.+4      	; 0x52a <DIO_u8GetPinValue+0x9e>
 526:	55 95       	asr	r21
 528:	47 95       	ror	r20
 52a:	8a 95       	dec	r24
 52c:	e2 f7       	brpl	.-8      	; 0x526 <DIO_u8GetPinValue+0x9a>
 52e:	ca 01       	movw	r24, r20
 530:	81 70       	andi	r24, 0x01	; 1
 532:	89 83       	std	Y+1, r24	; 0x01
 534:	26 c0       	rjmp	.+76     	; 0x582 <DIO_u8GetPinValue+0xf6>
			case PORTC: Local_u8Result=GET_BIT(PINC_Register,Copy_u8PinId); break;
 536:	e3 e3       	ldi	r30, 0x33	; 51
 538:	f0 e0       	ldi	r31, 0x00	; 0
 53a:	80 81       	ld	r24, Z
 53c:	28 2f       	mov	r18, r24
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	8b 81       	ldd	r24, Y+3	; 0x03
 542:	88 2f       	mov	r24, r24
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	a9 01       	movw	r20, r18
 548:	02 c0       	rjmp	.+4      	; 0x54e <DIO_u8GetPinValue+0xc2>
 54a:	55 95       	asr	r21
 54c:	47 95       	ror	r20
 54e:	8a 95       	dec	r24
 550:	e2 f7       	brpl	.-8      	; 0x54a <DIO_u8GetPinValue+0xbe>
 552:	ca 01       	movw	r24, r20
 554:	81 70       	andi	r24, 0x01	; 1
 556:	89 83       	std	Y+1, r24	; 0x01
 558:	14 c0       	rjmp	.+40     	; 0x582 <DIO_u8GetPinValue+0xf6>
			case PORTD: Local_u8Result=GET_BIT(PIND_Register,Copy_u8PinId); break;
 55a:	e0 e3       	ldi	r30, 0x30	; 48
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	80 81       	ld	r24, Z
 560:	28 2f       	mov	r18, r24
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	8b 81       	ldd	r24, Y+3	; 0x03
 566:	88 2f       	mov	r24, r24
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	a9 01       	movw	r20, r18
 56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_u8GetPinValue+0xe6>
 56e:	55 95       	asr	r21
 570:	47 95       	ror	r20
 572:	8a 95       	dec	r24
 574:	e2 f7       	brpl	.-8      	; 0x56e <DIO_u8GetPinValue+0xe2>
 576:	ca 01       	movw	r24, r20
 578:	81 70       	andi	r24, 0x01	; 1
 57a:	89 83       	std	Y+1, r24	; 0x01
 57c:	02 c0       	rjmp	.+4      	; 0x582 <DIO_u8GetPinValue+0xf6>
		}
	}
	else
	{
		//error
		Local_u8Result  = 0xFF;
 57e:	8f ef       	ldi	r24, 0xFF	; 255
 580:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8Result;
 582:	89 81       	ldd	r24, Y+1	; 0x01
}
 584:	0f 90       	pop	r0
 586:	0f 90       	pop	r0
 588:	0f 90       	pop	r0
 58a:	0f 90       	pop	r0
 58c:	0f 90       	pop	r0
 58e:	cf 91       	pop	r28
 590:	df 91       	pop	r29
 592:	08 95       	ret

00000594 <DIO_VidSetPortDirection>:


void DIO_VidSetPortDirection (u8 Copy_u8PortId , u8 Copy_u8PortDirection)
{
 594:	df 93       	push	r29
 596:	cf 93       	push	r28
 598:	00 d0       	rcall	.+0      	; 0x59a <DIO_VidSetPortDirection+0x6>
 59a:	00 d0       	rcall	.+0      	; 0x59c <DIO_VidSetPortDirection+0x8>
 59c:	cd b7       	in	r28, 0x3d	; 61
 59e:	de b7       	in	r29, 0x3e	; 62
 5a0:	89 83       	std	Y+1, r24	; 0x01
 5a2:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortId)
 5a4:	89 81       	ldd	r24, Y+1	; 0x01
 5a6:	28 2f       	mov	r18, r24
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	3c 83       	std	Y+4, r19	; 0x04
 5ac:	2b 83       	std	Y+3, r18	; 0x03
 5ae:	8b 81       	ldd	r24, Y+3	; 0x03
 5b0:	9c 81       	ldd	r25, Y+4	; 0x04
 5b2:	81 30       	cpi	r24, 0x01	; 1
 5b4:	91 05       	cpc	r25, r1
 5b6:	d1 f0       	breq	.+52     	; 0x5ec <DIO_VidSetPortDirection+0x58>
 5b8:	2b 81       	ldd	r18, Y+3	; 0x03
 5ba:	3c 81       	ldd	r19, Y+4	; 0x04
 5bc:	22 30       	cpi	r18, 0x02	; 2
 5be:	31 05       	cpc	r19, r1
 5c0:	2c f4       	brge	.+10     	; 0x5cc <DIO_VidSetPortDirection+0x38>
 5c2:	8b 81       	ldd	r24, Y+3	; 0x03
 5c4:	9c 81       	ldd	r25, Y+4	; 0x04
 5c6:	00 97       	sbiw	r24, 0x00	; 0
 5c8:	61 f0       	breq	.+24     	; 0x5e2 <DIO_VidSetPortDirection+0x4e>
 5ca:	1e c0       	rjmp	.+60     	; 0x608 <DIO_VidSetPortDirection+0x74>
 5cc:	2b 81       	ldd	r18, Y+3	; 0x03
 5ce:	3c 81       	ldd	r19, Y+4	; 0x04
 5d0:	22 30       	cpi	r18, 0x02	; 2
 5d2:	31 05       	cpc	r19, r1
 5d4:	81 f0       	breq	.+32     	; 0x5f6 <DIO_VidSetPortDirection+0x62>
 5d6:	8b 81       	ldd	r24, Y+3	; 0x03
 5d8:	9c 81       	ldd	r25, Y+4	; 0x04
 5da:	83 30       	cpi	r24, 0x03	; 3
 5dc:	91 05       	cpc	r25, r1
 5de:	81 f0       	breq	.+32     	; 0x600 <DIO_VidSetPortDirection+0x6c>
 5e0:	13 c0       	rjmp	.+38     	; 0x608 <DIO_VidSetPortDirection+0x74>
	{
		case PORTA :  DDRA_Register = Copy_u8PortDirection; break;
 5e2:	ea e3       	ldi	r30, 0x3A	; 58
 5e4:	f0 e0       	ldi	r31, 0x00	; 0
 5e6:	8a 81       	ldd	r24, Y+2	; 0x02
 5e8:	80 83       	st	Z, r24
 5ea:	0e c0       	rjmp	.+28     	; 0x608 <DIO_VidSetPortDirection+0x74>
		case PORTB :  DDRB_Register = Copy_u8PortDirection; break;
 5ec:	e7 e3       	ldi	r30, 0x37	; 55
 5ee:	f0 e0       	ldi	r31, 0x00	; 0
 5f0:	8a 81       	ldd	r24, Y+2	; 0x02
 5f2:	80 83       	st	Z, r24
 5f4:	09 c0       	rjmp	.+18     	; 0x608 <DIO_VidSetPortDirection+0x74>
		case PORTC :  DDRC_Register = Copy_u8PortDirection; break;
 5f6:	e4 e3       	ldi	r30, 0x34	; 52
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	8a 81       	ldd	r24, Y+2	; 0x02
 5fc:	80 83       	st	Z, r24
 5fe:	04 c0       	rjmp	.+8      	; 0x608 <DIO_VidSetPortDirection+0x74>
		case PORTD :  DDRD_Register = Copy_u8PortDirection; break;
 600:	e1 e3       	ldi	r30, 0x31	; 49
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	8a 81       	ldd	r24, Y+2	; 0x02
 606:	80 83       	st	Z, r24

		default : /*error*/	break;
	}
}
 608:	0f 90       	pop	r0
 60a:	0f 90       	pop	r0
 60c:	0f 90       	pop	r0
 60e:	0f 90       	pop	r0
 610:	cf 91       	pop	r28
 612:	df 91       	pop	r29
 614:	08 95       	ret

00000616 <DIO_VidSetPortValue>:


void DIO_VidSetPortValue (u8 Copy_u8PortId , u8 Copy_u8PortValue)
{
 616:	df 93       	push	r29
 618:	cf 93       	push	r28
 61a:	00 d0       	rcall	.+0      	; 0x61c <DIO_VidSetPortValue+0x6>
 61c:	00 d0       	rcall	.+0      	; 0x61e <DIO_VidSetPortValue+0x8>
 61e:	cd b7       	in	r28, 0x3d	; 61
 620:	de b7       	in	r29, 0x3e	; 62
 622:	89 83       	std	Y+1, r24	; 0x01
 624:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortId)
 626:	89 81       	ldd	r24, Y+1	; 0x01
 628:	28 2f       	mov	r18, r24
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	3c 83       	std	Y+4, r19	; 0x04
 62e:	2b 83       	std	Y+3, r18	; 0x03
 630:	8b 81       	ldd	r24, Y+3	; 0x03
 632:	9c 81       	ldd	r25, Y+4	; 0x04
 634:	81 30       	cpi	r24, 0x01	; 1
 636:	91 05       	cpc	r25, r1
 638:	d1 f0       	breq	.+52     	; 0x66e <DIO_VidSetPortValue+0x58>
 63a:	2b 81       	ldd	r18, Y+3	; 0x03
 63c:	3c 81       	ldd	r19, Y+4	; 0x04
 63e:	22 30       	cpi	r18, 0x02	; 2
 640:	31 05       	cpc	r19, r1
 642:	2c f4       	brge	.+10     	; 0x64e <DIO_VidSetPortValue+0x38>
 644:	8b 81       	ldd	r24, Y+3	; 0x03
 646:	9c 81       	ldd	r25, Y+4	; 0x04
 648:	00 97       	sbiw	r24, 0x00	; 0
 64a:	61 f0       	breq	.+24     	; 0x664 <DIO_VidSetPortValue+0x4e>
 64c:	1e c0       	rjmp	.+60     	; 0x68a <DIO_VidSetPortValue+0x74>
 64e:	2b 81       	ldd	r18, Y+3	; 0x03
 650:	3c 81       	ldd	r19, Y+4	; 0x04
 652:	22 30       	cpi	r18, 0x02	; 2
 654:	31 05       	cpc	r19, r1
 656:	81 f0       	breq	.+32     	; 0x678 <DIO_VidSetPortValue+0x62>
 658:	8b 81       	ldd	r24, Y+3	; 0x03
 65a:	9c 81       	ldd	r25, Y+4	; 0x04
 65c:	83 30       	cpi	r24, 0x03	; 3
 65e:	91 05       	cpc	r25, r1
 660:	81 f0       	breq	.+32     	; 0x682 <DIO_VidSetPortValue+0x6c>
 662:	13 c0       	rjmp	.+38     	; 0x68a <DIO_VidSetPortValue+0x74>
	{
		case PORTA :  PORTA_Register = Copy_u8PortValue; break;
 664:	eb e3       	ldi	r30, 0x3B	; 59
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	8a 81       	ldd	r24, Y+2	; 0x02
 66a:	80 83       	st	Z, r24
 66c:	0e c0       	rjmp	.+28     	; 0x68a <DIO_VidSetPortValue+0x74>
		case PORTB :  PORTB_Register = Copy_u8PortValue; break;
 66e:	e8 e3       	ldi	r30, 0x38	; 56
 670:	f0 e0       	ldi	r31, 0x00	; 0
 672:	8a 81       	ldd	r24, Y+2	; 0x02
 674:	80 83       	st	Z, r24
 676:	09 c0       	rjmp	.+18     	; 0x68a <DIO_VidSetPortValue+0x74>
		case PORTC :  PORTC_Register = Copy_u8PortValue; break;
 678:	e5 e3       	ldi	r30, 0x35	; 53
 67a:	f0 e0       	ldi	r31, 0x00	; 0
 67c:	8a 81       	ldd	r24, Y+2	; 0x02
 67e:	80 83       	st	Z, r24
 680:	04 c0       	rjmp	.+8      	; 0x68a <DIO_VidSetPortValue+0x74>
		case PORTD :  PORTD_Register = Copy_u8PortValue; break;
 682:	e2 e3       	ldi	r30, 0x32	; 50
 684:	f0 e0       	ldi	r31, 0x00	; 0
 686:	8a 81       	ldd	r24, Y+2	; 0x02
 688:	80 83       	st	Z, r24

		default : /*error*/	break;
	}

}
 68a:	0f 90       	pop	r0
 68c:	0f 90       	pop	r0
 68e:	0f 90       	pop	r0
 690:	0f 90       	pop	r0
 692:	cf 91       	pop	r28
 694:	df 91       	pop	r29
 696:	08 95       	ret

00000698 <vid_UART_vid_Initialize>:


/**************************************************************/

void vid_UART_vid_Initialize(void)
{
 698:	df 93       	push	r29
 69a:	cf 93       	push	r28
 69c:	cd b7       	in	r28, 0x3d	; 61
 69e:	de b7       	in	r29, 0x3e	; 62
  // Set BaudRate -> 9600/8MhZ
  UBRRL = 51;
 6a0:	e9 e2       	ldi	r30, 0x29	; 41
 6a2:	f0 e0       	ldi	r31, 0x00	; 0
 6a4:	83 e3       	ldi	r24, 0x33	; 51
 6a6:	80 83       	st	Z, r24
  UBRRH = 0;
 6a8:	e0 e4       	ldi	r30, 0x40	; 64
 6aa:	f0 e0       	ldi	r31, 0x00	; 0
 6ac:	10 82       	st	Z, r1
  // Set Frame Format -> 8 data, 1 stop, No Parity
  UCSRC = 0b10000110;
 6ae:	e0 e4       	ldi	r30, 0x40	; 64
 6b0:	f0 e0       	ldi	r31, 0x00	; 0
 6b2:	86 e8       	ldi	r24, 0x86	; 134
 6b4:	80 83       	st	Z, r24
  // Enable RX and TX
  UCSRB = 0b00011000;
 6b6:	ea e2       	ldi	r30, 0x2A	; 42
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	88 e1       	ldi	r24, 0x18	; 24
 6bc:	80 83       	st	Z, r24
}
 6be:	cf 91       	pop	r28
 6c0:	df 91       	pop	r29
 6c2:	08 95       	ret

000006c4 <vid_UART_vid_SendChar>:

/**************************************************************/

void vid_UART_vid_SendChar(u8 data)
{
 6c4:	df 93       	push	r29
 6c6:	cf 93       	push	r28
 6c8:	0f 92       	push	r0
 6ca:	cd b7       	in	r28, 0x3d	; 61
 6cc:	de b7       	in	r29, 0x3e	; 62
 6ce:	89 83       	std	Y+1, r24	; 0x01
  // Wait until transmission Register Empty
  while(!(UCSRA&0b00100000));
 6d0:	eb e2       	ldi	r30, 0x2B	; 43
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	80 81       	ld	r24, Z
 6d6:	88 2f       	mov	r24, r24
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	80 72       	andi	r24, 0x20	; 32
 6dc:	90 70       	andi	r25, 0x00	; 0
 6de:	00 97       	sbiw	r24, 0x00	; 0
 6e0:	b9 f3       	breq	.-18     	; 0x6d0 <vid_UART_vid_SendChar+0xc>

  UDR = data;
 6e2:	ec e2       	ldi	r30, 0x2C	; 44
 6e4:	f0 e0       	ldi	r31, 0x00	; 0
 6e6:	89 81       	ldd	r24, Y+1	; 0x01
 6e8:	80 83       	st	Z, r24

  // wait for transmit complete
  while(!(UCSRA&0b01000000));
 6ea:	eb e2       	ldi	r30, 0x2B	; 43
 6ec:	f0 e0       	ldi	r31, 0x00	; 0
 6ee:	80 81       	ld	r24, Z
 6f0:	88 2f       	mov	r24, r24
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	80 74       	andi	r24, 0x40	; 64
 6f6:	90 70       	andi	r25, 0x00	; 0
 6f8:	00 97       	sbiw	r24, 0x00	; 0
 6fa:	b9 f3       	breq	.-18     	; 0x6ea <vid_UART_vid_SendChar+0x26>
}
 6fc:	0f 90       	pop	r0
 6fe:	cf 91       	pop	r28
 700:	df 91       	pop	r29
 702:	08 95       	ret

00000704 <u8_UART_u8_GetChar>:

/**************************************************************/

u8 u8_UART_u8_GetChar(void)
{
 704:	df 93       	push	r29
 706:	cf 93       	push	r28
 708:	cd b7       	in	r28, 0x3d	; 61
 70a:	de b7       	in	r29, 0x3e	; 62
  // Wait until Reception Complete
  while(!(UCSRA&0b10000000));
 70c:	eb e2       	ldi	r30, 0x2B	; 43
 70e:	f0 e0       	ldi	r31, 0x00	; 0
 710:	80 81       	ld	r24, Z
 712:	88 23       	and	r24, r24
 714:	dc f7       	brge	.-10     	; 0x70c <u8_UART_u8_GetChar+0x8>

  return UDR;
 716:	ec e2       	ldi	r30, 0x2C	; 44
 718:	f0 e0       	ldi	r31, 0x00	; 0
 71a:	80 81       	ld	r24, Z
}
 71c:	cf 91       	pop	r28
 71e:	df 91       	pop	r29
 720:	08 95       	ret

00000722 <main>:
#include "DIO_interface.h"
#include "UART_interface.h"
#include "DIO_regs.h"

void main (void)
{
 722:	df 93       	push	r29
 724:	cf 93       	push	r28
 726:	0f 92       	push	r0
 728:	cd b7       	in	r28, 0x3d	; 61
 72a:	de b7       	in	r29, 0x3e	; 62
	u8 res=0;
 72c:	19 82       	std	Y+1, r1	; 0x01
	vid_UART_vid_Initialize();
 72e:	0e 94 4c 03 	call	0x698	; 0x698 <vid_UART_vid_Initialize>
	DIO_VidSetPortDirection(PORTA,0xFF);
 732:	80 e0       	ldi	r24, 0x00	; 0
 734:	6f ef       	ldi	r22, 0xFF	; 255
 736:	0e 94 ca 02 	call	0x594	; 0x594 <DIO_VidSetPortDirection>

	while(1)
	{
		res=u8_UART_u8_GetChar();
 73a:	0e 94 82 03 	call	0x704	; 0x704 <u8_UART_u8_GetChar>
 73e:	89 83       	std	Y+1, r24	; 0x01
		if (res == 'a')
 740:	89 81       	ldd	r24, Y+1	; 0x01
 742:	81 36       	cpi	r24, 0x61	; 97
 744:	29 f4       	brne	.+10     	; 0x750 <main+0x2e>
		{
			DIO_VidSetPortValue(PORTA,DIO_HIGH);
 746:	80 e0       	ldi	r24, 0x00	; 0
 748:	61 e0       	ldi	r22, 0x01	; 1
 74a:	0e 94 0b 03 	call	0x616	; 0x616 <DIO_VidSetPortValue>
 74e:	f5 cf       	rjmp	.-22     	; 0x73a <main+0x18>
		}
		else if (res == 'b')
 750:	89 81       	ldd	r24, Y+1	; 0x01
 752:	82 36       	cpi	r24, 0x62	; 98
 754:	91 f7       	brne	.-28     	; 0x73a <main+0x18>
		{
			DIO_VidSetPortValue(PORTA,DIO_LOW);
 756:	80 e0       	ldi	r24, 0x00	; 0
 758:	60 e0       	ldi	r22, 0x00	; 0
 75a:	0e 94 0b 03 	call	0x616	; 0x616 <DIO_VidSetPortValue>
 75e:	ed cf       	rjmp	.-38     	; 0x73a <main+0x18>

00000760 <_exit>:
 760:	f8 94       	cli

00000762 <__stop_program>:
 762:	ff cf       	rjmp	.-2      	; 0x762 <__stop_program>
